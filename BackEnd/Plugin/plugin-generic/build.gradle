ext {
    plugin_name = 'generic'
    plugin_alias = plugin_name
}


dependencies {

    if (incremental_build) {
        compileOnly "com.exactpro.sf:sailfish-core:${artifactCoreVersion}"
        compile "com.exactpro.sf:service-ntg:${artifactVersion}"
        compile "com.exactpro.sf:service-itch:${artifactVersion}"
        compile "com.exactpro.sf:service-fix:${artifactVersion}"
        compile "com.exactpro.sf:service-fast:${artifactVersion}"
    } else {
        compileOnly project(':BackEnd:Core:sailfish-core')
        compile project(':BackEnd:Service:service-ntg')
        compile project(':BackEnd:Service:service-itch')
        compile project(':BackEnd:Service:service-fix')
        compile project(':BackEnd:Service:service-fast')
    }
}

validateDictionary {
    dependsOn(convertFixOrchestraToSailfishDictionary)

    validate(NTG_VALIDATOR, 'NTG_GENERIC.xml')
    validate(ITCH_VALIDATOR, 'ITCH_GENERIC.xml')
}

convertFixOrchestraToSailfishDictionary {
    enabled = false // disabled because we have to update Sailfish Gradle plugin first

    fixtXml = uri('https://raw.githubusercontent.com/quickfix/quickfix/master/spec/FIXT11.xml')
    orchestraXml = uri('https://raw.githubusercontent.com/FIXTradingCommunity/orchestrations/master/FIX%20Standard/OrchestraEP255.xml')
    fileSuffix = 'GENERIC'
    outputDirectory = genDictionaryDir
}
